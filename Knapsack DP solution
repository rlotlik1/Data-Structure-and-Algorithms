#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#ifndef max                                                //defining macro max
    #define max(a,b) ((a) > (b) ? (a) : (b))
#endif


int main()
{
    
    int i,j,n,W,w[50],v[50];
    int knap[50][50];                                      //Initialization
    
    printf("Enter the number of items");                   //Input total number of items
    scanf("%d",&n);
    
    printf("Enter the weight of knapsack");                //Max weight of knapsack
    scanf("%d",&W);
    
    printf("Enter the weights of respective items");       //Input weights of items
    
    for(i=1;i<=n;i++)
    {
        scanf("%d",&w[i]);
    }
    
    printf("Enter the values of respective items");        //Input values of items
    for(i=1;i<=n;i++)
    {
        scanf("%d",&v[i]);
    }
    
    for(j=0;j<=W;j++)                                      //Initialize the zeroth items in array equal to zero
    {
        knap[0][j]=0;                                      //Initialize zero
    }
    
    for(i=1;i<=n;i++)                                      
    {
        for(j=0;j<=W;j++)
        {
           
            if(w[i]<=j)                                    //if weight is less than current weight in knapsack
            {
               knap[i][j]=max(knap[i-1][j],knap[i-1][j-w[i]]+v[i]);     //print max value of the calculated value      
            }
            
            else
            {
               knap[i][j]=knap[i-1][j];                       //print the previous value if i'th item is not in solution
            }
            
        }
        
    }
    
    
    //print the matrix of calculated values of respective indexes
    for(i=0;i<=n;i++)
    {
            for(j=0;j<=W;j++)
        {
                printf("%d\t",knap[i][j]);                         
        }
            printf("\n");
            
    }
    
    //print final value of the items in knapsack
    printf("The total value is %d\n",knap[n][W]);
    
    
    i=n;                               //initialize 'i' with the last item
    j=W;                               //initialize 'j' with the max weight in knapsack
    int a[20];
    
    
   
     printf("The items in knapsack are");  
    
     while(i>0 && j>0)                    //runs till we reach the zeroth item
    {
        if(knap[i][j]!=knap[i-1][j])     //checks the nth element with previous item
        {
            a[i]=1;                      //Initialize flag
           
            i=i-1;                       //decrement the items
            j=j-w[i];                    ////decrement the weight of knapsack with weight of the ith item in the knapsack
            
        
         }
        
        else
        {
            i=i-1;                          //else decrement ith element
            
        }
    
     }
     
     //print the items in the knapsack with the help of flag array declared
     for(i=1;i<=n;i++)                       
    {
      if(a[i]==1)
        {
            printf("  %d  \t",i);
        }

     }
     
     
}
